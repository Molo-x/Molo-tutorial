[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Welcome Molo Pipeline!address issues, developed Molo Pipeline platform establishes standardized spatial multi-omics analysis framework. platform integrates complete workflows data preprocessing, fundamental analysis, visualization interactive graphical interface, effectively lowering technical barriers. core advantage lies breakthrough data compatibility - Molo analysis objects can losslessly converted Seurat, CellChat, SpatialFeatureExperiment, CDS(monocle-v3), anndata(Scanpy/Squidpy) formats, achieving seamless cross-platform data transition. dual functionality caters basic analysis needs novices providing flexible technical support professionals conducting multidimensional exploratory research.Regarding deep learning integration, Molo Pipeline innovatively implements systematic interoperability PyTorch framework. platform’s built-intelligent data integration algorithms demonstrate significant advantages public dataset validations, spatial alignment accuracy batch effect correction efficacy surpassing existing mainstream algorithms. meticulously designed R-PyTorch interface encapsulation, users can conveniently leverage cutting-edge neural network frameworks advanced analysis maintaining seamless connectivity existing R-based analytical workflows.anticipate Molo Pipeline, technological breakthroughs innovative design, provide researchers spatial multi-omics efficient flexible analytical tools, facilitating groundbreaking advancements related studies.","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"","code":""},{"path":"introduction.html","id":"key-features-and-advantages","chapter":"1 Introduction","heading":"1.1 Key Features and Advantages","text":"Molo Pipeline dedicated establishing standardized spatial multi-omics analysis paradigm, achieving end--end workflow coverage data preprocessing fundamental analysis visualization integrated framework. intelligent interface optimized algorithms significantly enhance analytical efficiency result reproducibility, effectively reducing requirements programming expertise toolkit learning costs.core features technical strengths Molo Pipeline include:Simplicity: Eliminates environment configuration programming learning, encapsulating core analytical functions single-line commands zero-code interactive operations;Efficiency: Employs parallelized computing frameworks intelligent resource allocation strategies achieve super-linear time complexity data processing;Accuracy: Integrates peer-reviewed authoritative algorithm frameworks full-process quality control systems ensure biologically meaningful results;Automation: Establishes standardized analytical pathways, enabling one-click generation publication-ready reports via batch processing systems;Comprehensiveness: Fully supports spatial transcriptomics, proteomics, multimodal data analysis, continuous updates integrating cutting-edge methodologies;Compatibility: Implements standardized data interfaces lossless conversion platform objects including Seurat, Scanpy(anndata), Voyager, CellChat, Monocle3(CDS);Extensibility: Features modular architecture design, supporting custom analytical workflows algorithm plugin development, innovative deep integration R-language ecosystems PyTorch frameworks;Visualization: Preloaded Nature/Cell-grade visualization templates automatically generate multidimensional interactive plots, fulfilling demands data exploration publication-ready graphics.","code":""},{"path":"introduction.html","id":"supported-data-types","chapter":"1 Introduction","heading":"1.2 Supported Data Types","text":"Molo Pipeline currently supports following data types:10X Visium10X XeniumVizgen MERFISHNanostring CosMxSlide-seq v2spATAC-seqCODEXStereo-seqCustom Analysis","code":""},{"path":"installation.html","id":"installation","chapter":"2 Installation","heading":"2 Installation","text":"","code":""},{"path":"installation.html","id":"system-requirements","chapter":"2 Installation","heading":"2.1 System Requirements","text":"Hardware Requirements:GPU: NVIDIA GPU (optional)Memory: Minimum 8GB (32GB+ recommended)Storage: least 20GB free spaceSoftware Requirements:DockerTip: avoid dependency conflicts manual installations, Molo Pipeline provides pre-verified conda environment via Docker image, containing Molo package dependencies. one-step solution requires additional package installations. Please download preconfigured Docker image provided link.","code":""},{"path":"installation.html","id":"installation-steps","chapter":"2 Installation","heading":"2.2 Installation Steps","text":"Execute docker pull fetch Molo image start immediate use.","code":""},{"path":"molo-functions.html","id":"molo-functions","chapter":"3 Molo Functions","heading":"3 Molo Functions","text":"section, provide detailed explanations functionalities parameter configurations function Molo package.","code":""},{"path":"molo-functions.html","id":"molo_create","chapter":"3 Molo Functions","heading":"3.1 Molo_Create","text":"","code":""},{"path":"molo-functions.html","id":"function","chapter":"3 Molo Functions","heading":"3.1.1 Function","text":"Creates Molo object standard-format raw data files.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings","chapter":"3 Molo Functions","heading":"3.1.2 Parameters and Meanings","text":"data_type: Platform type (e.g., \"Visium\", default)folder_path: Directory path containing input files (default: current directory \"./\")n_cells: Optional parameter specifying subset cell count (default: restriction)n_features: Optional parameter specifying feature selection count (default: restriction)ATAC_dataset: ATAC-seq reference genome species (options: \"mouse\" \"human\", default: \"mouse\")CODEX_type: Multiplexed imaging platform type (default: \"processor\")softmax: Whether apply softmax normalization (logical value, default: FALSE)custom_index: Custom index column identifier (default: \"__index_level_0__\")","code":""},{"path":"molo-functions.html","id":"return-value","chapter":"3 Molo Functions","heading":"3.1.3 Return Value","text":"constructed Molo object.","code":""},{"path":"molo-functions.html","id":"basic-example","chapter":"3 Molo Functions","heading":"3.1.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_Create(data_type = \"Visium\",  \n                        folder_path = \"./Visium/\",  \n                        n_cells = 2000,  \n                        n_features = 3000)  "},{"path":"molo-functions.html","id":"molo_reduction_cluster","chapter":"3 Molo Functions","heading":"3.2 Molo_reduction_cluster","text":"","code":""},{"path":"molo-functions.html","id":"function-1","chapter":"3 Molo Functions","heading":"3.2.1 Function","text":"Performs dimensionality reduction clustering analysis Molo object.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-1","chapter":"3 Molo Functions","heading":"3.2.2 Parameters and Meanings","text":"obj: Input Molo objectonly_QC: Whether perform quality control filtering (logical value)nFeature_range: Valid gene count range (vector format, e.g., c(200, 2500))nCount_range: Valid UMI count range (vector format, e.g., c(500, 15000))molo_env: Runtime configuration parameters (environment variable object)labeled_ref: Reference annotated dataset file path (recommended: rds-format Seurat object)molo_plot_path: Output directory path result images (default: generated environment variables)save_type: Result saving format (e.g., static image \"png\"/interactive image \"echarts\")run_Banksy: Whether enable Banksy spatial clustering (logical value)image_alpha: Spatial image transparency (numeric range 0-1)pt_size: Visualization point size (numeric, auto-adjusted default)atac_steps: ATAC-seq processing pipeline step identifiers (character vector)show_progress: Whether display progress information (logical value)","code":""},{"path":"molo-functions.html","id":"return-value-1","chapter":"3 Molo Functions","heading":"3.2.3 Return Value","text":"Molo object containing dimensionality reduction embeddings clustering labels.","code":""},{"path":"molo-functions.html","id":"basic-example-1","chapter":"3 Molo Functions","heading":"3.2.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_reduction_cluster(obj = molo_obj,  \n                                   only_QC = FALSE,  \n                                   nFeature_range = c(200, 2500),  \n                                   nCount_range = c(500, 15000),  \n                                   molo_plot_path = \"./plots/\")  "},{"path":"molo-functions.html","id":"molo_var_features","chapter":"3 Molo Functions","heading":"3.3 Molo_var_features","text":"","code":""},{"path":"molo-functions.html","id":"function-2","chapter":"3 Molo Functions","heading":"3.3.1 Function","text":"Identifies spatially variable features marker genes Molo object.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-2","chapter":"3 Molo Functions","heading":"3.3.2 Parameters and Meanings","text":"obj: Input Molo objectfeatures: Predefined feature set analysis (optional; default: features)sp_var_features: Number top spatially variable features select (numeric)molo_plot_path: Storage directory visualization results (default: generated environment variables)save_type: Output image format (e.g., static \"png\"/interactive \"echarts\")font_size: Visualization text size (numeric, default: 12)image_alpha: Spatial layer transparency (numeric range 0-1, default: 0.6)pt_size: Feature expression point size (numeric, default: 1.0)show_progress: Whether display progress (logical value, default: TRUE)","code":""},{"path":"molo-functions.html","id":"return-value-2","chapter":"3 Molo Functions","heading":"3.3.3 Return Value","text":"Molo object containing spatially variable feature analysis results.","code":""},{"path":"molo-functions.html","id":"basic-example-2","chapter":"3 Molo Functions","heading":"3.3.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_var_features(obj = molo_obj,  \n                              sp_var_features = 20,  \n                              molo_plot_path = \"./plots/\")  "},{"path":"molo-functions.html","id":"molo_top_go_terms","chapter":"3 Molo Functions","heading":"3.4 Molo_top_GO_terms","text":"","code":""},{"path":"molo-functions.html","id":"function-3","chapter":"3 Molo Functions","heading":"3.4.1 Function","text":"Performs GO enrichment analysis visualizes core pathways across clusters.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-3","chapter":"3 Molo Functions","heading":"3.4.2 Parameters and Meanings","text":"obj: Molo object cluster annotationsdataset: Species database gene annotation (options: \"mouse\" \"human\")plot_cols: Custom color palette visualization (optional; uses built-colors default)molo_plot_path: Storage directory GO result images (default: generated environment variables)font_size: Visualization label text size (numeric, default: 12)show_progress: Whether display progress (logical value, default: TRUE)","code":""},{"path":"molo-functions.html","id":"return-value-3","chapter":"3 Molo Functions","heading":"3.4.3 Return Value","text":"Molo object containing GO enrichment analysis results.","code":""},{"path":"molo-functions.html","id":"basic-example-3","chapter":"3 Molo Functions","heading":"3.4.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_top_GO_terms(obj = molo_obj,  \n                              dataset = \"mouse\",  \n                              molo_plot_path = \"./plots/\")  "},{"path":"molo-functions.html","id":"molo_cell_chat","chapter":"3 Molo Functions","heading":"3.5 Molo_cell_chat","text":"","code":""},{"path":"molo-functions.html","id":"function-4","chapter":"3 Molo Functions","heading":"3.5.1 Function","text":"Performs cell-cell communication analysis using CellChat.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-4","chapter":"3 Molo Functions","heading":"3.5.2 Parameters and Meanings","text":"obj: Molo object cell type annotationsplot_cols: Custom color mapping cell groups (optional; uses built-colors default)dataset: Species database ligand-receptor pairs (options: \"mouse\" \"human\")molo_plot_path: Output directory cell communication images (default: generated environment variables)font_size: Visualization label text size (numeric, default: 12)show_progress: Whether display progress (logical value, default: TRUE)","code":""},{"path":"molo-functions.html","id":"return-value-4","chapter":"3 Molo Functions","heading":"3.5.3 Return Value","text":"Molo object containing CellChat analysis results.","code":""},{"path":"molo-functions.html","id":"basic-example-4","chapter":"3 Molo Functions","heading":"3.5.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_cell_chat(obj = molo_obj,  \n                           dataset = \"mouse\",  \n                           molo_plot_path = \"./plots/\")  "},{"path":"molo-functions.html","id":"molo_traj","chapter":"3 Molo Functions","heading":"3.6 Molo_traj","text":"","code":""},{"path":"molo-functions.html","id":"function-5","chapter":"3 Molo Functions","heading":"3.6.1 Function","text":"Performs cell trajectory inference using Monocle3.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-5","chapter":"3 Molo Functions","heading":"3.6.2 Parameters and Meanings","text":"obj: Molo object dimensionality reduction resultsplot_cols: Custom color mapping trajectories (optional; uses built-colors default)molo_plot_path: Storage directory trajectory analysis images (default: generated environment variables)show_progress: Whether display progress (logical value, default: TRUE)","code":""},{"path":"molo-functions.html","id":"return-value-5","chapter":"3 Molo Functions","heading":"3.6.3 Return Value","text":"Molo object containing trajectory inference metadata.","code":""},{"path":"molo-functions.html","id":"basic-example-5","chapter":"3 Molo Functions","heading":"3.6.4 Basic Example","text":"","code":"\nmolo_obj <- Molo_traj(obj = molo_obj, molo_plot_path = \"./plots/\")  "},{"path":"molo-functions.html","id":"molo_integrate","chapter":"3 Molo Functions","heading":"3.7 Molo_Integrate","text":"","code":""},{"path":"molo-functions.html","id":"function-6","chapter":"3 Molo Functions","heading":"3.7.1 Function","text":"Performs spatial data integration using Molo framework.","code":""},{"path":"molo-functions.html","id":"parameters-and-meanings-6","chapter":"3 Molo Functions","heading":"3.7.2 Parameters and Meanings","text":"obj_list: List input Molo objectsvar_features: Number highly variable features select (integer, default: 3000)py_path: Python interpreter executable path (default: \"home/user/anaconda3/envs/Molo/bin/python\")device: Model training device (options: \"cuda:0\"/\"cpu\", default: \"cuda:0\")save_path: Integration result storage directory (default: \"./molo_save/\")pretrain_epoch: Pretraining iterations (integer, default: 100)train_epoch: Main training iterations (integer, default: 300)tmp: Temporary directory intermediate files (default: \"./_molo_tmp/\")edge: Edge construction strategy (character, default: \"together\")sp_alignment: Spatial alignment method (character, default: \"Molo\")plot_3D_width: 3D visualization image width (numeric, default: 8.0)plot_3D_height: 3D visualization image height (numeric, default: 6.0)plot_3D_spot_size: 3D plot point size (numeric, default: 0.5)dist_threshold: Maximum spatial matching distance threshold (numeric, default: 5.0)pis_path: Precomputed alignment probability file path (optional, default: NULL)sp_alignment_s: Spatial alignment regularization strength (numeric, default: 0.7)use_harmony: Whether enable Harmony integration correction (logical value, default: FALSE)compute_iLISI: Whether compute integration quality metrics (logical value, default: TRUE)edge_type: Edge connection type (character, default: \"together\")edge_sp: Spatial neighborhood edge count (integer, default: 10)edge_mtx: Feature similarity edge count (integer, default: 10)hidden_dims: Neural network hidden layer dimensions (integer, default: 250)reduction_dims: Latent space dimensions (integer, default: 30)mse_loss: Mean squared error loss weight (numeric, default: 1.0)tri_loss: Triplet loss weight (numeric, default: 1.0)ggae_loss: Graph autoencoder loss weight (numeric, default: 1.0)cos_loss: Cosine similarity loss weight (numeric, default: 1.0)bce_loss: Binary cross-entropy loss weight (numeric, default: 1.0)kl_loss: KL divergence loss weight (numeric, default: 1.0)K_h: Similarity scaling hyperparameter (numeric, default: 5.0)verbose: Whether display progress information (logical value, default: TRUE)","code":""},{"path":"molo-functions.html","id":"return-value-6","chapter":"3 Molo Functions","heading":"3.7.3 Return Value","text":"integrated Molo object.","code":""},{"path":"molo-functions.html","id":"basic-example-6","chapter":"3 Molo Functions","heading":"3.7.4 Basic Example","text":"","code":"\nintegrated_obj <- Molo_Integrate(obj_list = list(molo1, molo2),  \n                                 var_features = 3000)  "},{"path":"basic-pipeline.html","id":"basic-pipeline","chapter":"4 Basic Pipeline","heading":"4 Basic Pipeline","text":"(following provides complete workflow running Molo Pipeline various datasets. Copy run code reproduce results displayed website. Additionally, provide official dataset links & pre-packaged molo objects users can choose download needed.)","code":""},{"path":"basic-pipeline.html","id":"x-visium","chapter":"4 Basic Pipeline","heading":"4.1 10X Visium","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements","chapter":"4 Basic Pipeline","heading":"4.1.1 Data Requirements","text":"10X Visium data Molo Pipeline must contain filtered_feature_bc_matrix.h5 file spatial folder. spatial folder include three files: scalefactors_json.json, tissue_lowres_image.png, tissue_positions_list.csv. files generated Space Ranger. file structure tree example data:","code":"visium\n├── filtered_feature_bc_matrix.h5\n└── spatial\n    ├── aligned_fiducials.jpg\n    ├── detected_tissue_image.jpg\n    ├── scalefactors_json.json\n    ├── tissue_hires_image.png\n    ├── tissue_lowres_image.png\n    └── tissue_positions_list.csv\n    "},{"path":"basic-pipeline.html","id":"example-data","chapter":"4 Basic Pipeline","heading":"4.1.2 Example Data","text":"can download public 10X Visium data . Molo also supports cell label transfer using reference datasets (optional). demonstration, use Seurat-formatted mouse brain reference data example. corresponding paper.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline","chapter":"4 Basic Pipeline","heading":"4.1.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"Visium\", folder_path = \"./visium\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          molo_env = \"/anaconda3/envs/Molo/\",\n                          plot_path = \"./plots/visium/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"slide-seq-v1v2","chapter":"4 Basic Pipeline","heading":"4.2 Slide-seq v1/v2","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-1","chapter":"4 Basic Pipeline","heading":"4.2.1 Data Requirements","text":"Slide-seq data Molo Pipeline must contain raw_counts.csv.gz spatial_info.csv.gz files. also support data formats like .tsv.gz .txt.gz. file structure tree example data:","code":"slide_seq\n├── raw_counts.csv.gz\n└── spatial_info.csv.gz"},{"path":"basic-pipeline.html","id":"example-data-1","chapter":"4 Basic Pipeline","heading":"4.2.2 Example Data","text":"Download public Slide-seq data Slide-seq v2 data.(Haven’t time run v2 dataset yet)","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-1","chapter":"4 Basic Pipeline","heading":"4.2.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"Slide-seq\", folder_path = \"./slide_seq\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/slide_seq/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"vizgen-merfish","chapter":"4 Basic Pipeline","heading":"4.3 Vizgen MERFISH","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-2","chapter":"4 Basic Pipeline","heading":"4.3.1 Data Requirements","text":"Vizgen MERFISH data Molo Pipeline must contain cell_by_gene.csv file cell_boundaries folder. cell_boundaries folder contain multiple **feature_data_*.hdf5** files. file structure tree example data:","code":"vizgen\n├── cell_boundaries\n│   ├── feature_data_0.hdf5\n│   ├── feature_data_1.hdf5\n│   ├── ...\n│   └── feature_data_1225.hdf5\n└── cell_by_gene.csv"},{"path":"basic-pipeline.html","id":"example-data-2","chapter":"4 Basic Pipeline","heading":"4.3.2 Example Data","text":"Download public Vizgen MERFISH data.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-2","chapter":"4 Basic Pipeline","heading":"4.3.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"MERFISH\", folder_path = \"./merfish\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/vizgen/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"nanostring-cosmx","chapter":"4 Basic Pipeline","heading":"4.4 Nanostring CosMx","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-3","chapter":"4 Basic Pipeline","heading":"4.4.1 Data Requirements","text":"Slide-seq v2 data Molo Pipeline requires several files. file structure tree example data:","code":"cosmx\n├── Run5642_S3_Quarter_exprMat_file.csv\n├── Run5642_S3_Quarter_fov_positions_file.csv\n├── Run5642_S3_Quarter_metadata_file.csv\n├── Run5642_S3_Quarter-polygons.csv\n└── Run5642_S3_Quarter_tx_file.csv"},{"path":"basic-pipeline.html","id":"example-data-3","chapter":"4 Basic Pipeline","heading":"4.4.2 Example Data","text":"Download public nanostring CosMx data.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-3","chapter":"4 Basic Pipeline","heading":"4.4.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"CosMx\", folder_path = \"./cosmx\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"human\",\n                          plot_path = \"./plots/cosmx/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"x-xenium","chapter":"4 Basic Pipeline","heading":"4.5 10X Xenium","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-4","chapter":"4 Basic Pipeline","heading":"4.5.1 Data Requirements","text":"Refer example data.","code":""},{"path":"basic-pipeline.html","id":"example-data-4","chapter":"4 Basic Pipeline","heading":"4.5.2 Example Data","text":"Download public 10X Xenium data.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-4","chapter":"4 Basic Pipeline","heading":"4.5.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"Xenium\", folder_path = \"./xenium\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/xenium/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"spatial-atac-seq","chapter":"4 Basic Pipeline","heading":"4.6 spatial ATAC-seq","text":"","code":""},{"path":"basic-pipeline.html","id":"preprocessing","chapter":"4 Basic Pipeline","heading":"4.6.1 Preprocessing","text":"Download SRA data NCBI decompress;Download SRA data NCBI decompress;Fill config.yaml instructed. modify files except config.yaml;Fill config.yaml instructed. modify files except config.yaml;Run snakemake --configfile config.yaml terminal;Run snakemake --configfile config.yaml terminal;Check fragments.tsv.gz output files specified directory.Check fragments.tsv.gz output files specified directory.Note: preprocessing, need install CellRanger ATAC independently fill installation path config.yaml prompted.","code":""},{"path":"basic-pipeline.html","id":"data-requirements-5","chapter":"4 Basic Pipeline","heading":"4.6.2 Data Requirements","text":"Slide-seq v2 data Molo Pipeline must contain fragments.tsv.gz spatial folder. spatial folder include scalefactors_json.json, tissue_lowres_image.png, tissue_positions_list.csv. file structure tree example data:","code":"sp_ATAC\n├── fragments.tsv.gz\n└── spatial\n    ├── scalefactors_json.json\n    ├── tissue_lowres_image.png\n    └── tissue_positions_list.csv"},{"path":"basic-pipeline.html","id":"example-data-5","chapter":"4 Basic Pipeline","heading":"4.6.3 Example Data","text":"Download public spatial ATAC-seq data.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-5","chapter":"4 Basic Pipeline","heading":"4.6.4 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"ATAC\", folder_path = \"./atac\", ATAC_dataset = \"mouse\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/atac/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"codex","chapter":"4 Basic Pipeline","heading":"4.7 CODEX","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-6","chapter":"4 Basic Pipeline","heading":"4.7.1 Data Requirements","text":"Refer example data.","code":""},{"path":"basic-pipeline.html","id":"example-data-6","chapter":"4 Basic Pipeline","heading":"4.7.2 Example Data","text":"Download public Akoya CODEX data. data description.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-6","chapter":"4 Basic Pipeline","heading":"4.7.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"CODEX\", folder_path = \"./codex\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"human\",\n                          plot_path = \"./plots/codex/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"stereo-seq","chapter":"4 Basic Pipeline","heading":"4.8 Stereo-seq","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-7","chapter":"4 Basic Pipeline","heading":"4.8.1 Data Requirements","text":"Refer example data.","code":""},{"path":"basic-pipeline.html","id":"example-data-7","chapter":"4 Basic Pipeline","heading":"4.8.2 Example Data","text":"Download public Stereo-seq data.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-7","chapter":"4 Basic Pipeline","heading":"4.8.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"Stereo-seq\", folder_path = \"./stereo_seq/\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/stereo_seq/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"basic-pipeline.html","id":"custom","chapter":"4 Basic Pipeline","heading":"4.9 Custom","text":"","code":""},{"path":"basic-pipeline.html","id":"data-requirements-8","chapter":"4 Basic Pipeline","heading":"4.9.1 Data Requirements","text":"Custom data Molo Pipeline must contain matrix.parquet optional components. file structure tree example data:Note: Given typically large size matrix embedding data, use parquet format instead traditional CSV better /O efficiency. can create parquet files using arrow package R pandas.to_parquet(engine=‘pyarrow’) Python.","code":"custom\n├── matrix.parquet\n├── embedding.parquet(optional)\n├── umap.parquet(optional)\n├── meta.csv(optional)\n└── spatial.csv(optional)"},{"path":"basic-pipeline.html","id":"example-data-8","chapter":"4 Basic Pipeline","heading":"4.9.2 Example Data","text":"Download Custom data generated DLPFC dataset.","code":""},{"path":"basic-pipeline.html","id":"standard-pipeline-8","chapter":"4 Basic Pipeline","heading":"4.9.3 Standard Pipeline","text":"","code":"\nmolo_obj <- create_molo(\"Custom\", folder_path = \"./custom/\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/custom/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"web-page.html","id":"web-page","chapter":"5 Web Page","heading":"5 Web Page","text":"Molo Pipeline provides Shiny-based online analysis platform users can deploy locally perform data analysis visualize results web interface.","code":""},{"path":"web-page.html","id":"molo_web","chapter":"5 Web Page","heading":"5.1 Molo_web","text":"can use Molo_web function rapidly deploy web interface locally data analysis result visualization. parameter descriptions Molo_web:Tip: data must stored subfolders data_path following page instructions. example, 10X Visium data placed data_path/visium. Data directly stored data_path recognized!","code":""},{"path":"web-page.html","id":"web-page-installation","chapter":"5 Web Page","heading":"5.2 Web Page Installation","text":"","code":""},{"path":"web-page.html","id":"install-shiny-server","chapter":"5 Web Page","heading":"5.2.1 Install Shiny Server:","text":"","code":"sudo apt-get install shiny-server"},{"path":"web-page.html","id":"deploy-molo-pipeline-web-app","chapter":"5 Web Page","heading":"5.2.2 Deploy Molo Pipeline Web App:","text":"Copy Web App folder Shiny Server’s application directory restart service:\nbash sudo cp -r web_app /srv/shiny-server/ sudo systemctl restart shiny-server","code":""},{"path":"web-page.html","id":"running-pipeline-via-web-page-10x-visium-example","chapter":"5 Web Page","heading":"5.3 Running Pipeline via Web Page (10X Visium Example)","text":"","code":""},{"path":"web-page.html","id":"access-local-webpage","chapter":"5 Web Page","heading":"5.3.1 Access Local Webpage:","text":"Open browser navigate http://localhost:3838/web_app. interface loading appear follows:can either (1) open scRNA-seq Analyse menu click 10X Visium (indicated blue arrow), (1) directly click Analyse Directly jump 10X Visium analysis (indicated green arrow).","code":""},{"path":"web-page.html","id":"configure-parameters","chapter":"5 Web Page","heading":"5.3.2 Configure Parameters:","text":"opening analysis, follow sidebar instructions (1) place data files, (2) set parameters, click (3) RUN start analysis:","code":""},{"path":"web-page.html","id":"execute-molo-pipeline","chapter":"5 Web Page","heading":"5.3.3 Execute Molo Pipeline:","text":"clicking RUN, confirm execution prompted. perform operations close webpage execution avoid unexpected errors. runtime depends server performance dataset size. Upon completion, results display right. can (1) collapse sidebar (2) select analysis results menu:Tip: plot shows “Waiting Analysis”, indicates valid results generated. Please verify data exploratory analysis retry adjusted parameters.","code":""},{"path":"faq.html","id":"faq","chapter":"6 FAQ","heading":"6 FAQ","text":"","code":""},{"path":"faq.html","id":"docker-installation-failure","chapter":"6 FAQ","heading":"6.1 Docker Installation Failure","text":"Issue: Errors occur pulling Docker images running Docker containers.Resolution: significant anomalies detected current tests. Please refer Docker official documentation. issue persists, save complete environment information logs, submit problem following instructions Issue Reporting section.","code":""},{"path":"faq.html","id":"run-button-inactive","chapter":"6 FAQ","heading":"6.2 RUN Button Inactive","text":"Issue: RUN button remains grayed even placing data configuring parameters.Resolution: Verify :\nData stored designated subfolder data_path (e.g., data_path/visium).\nFiles correctly named complete (refer data requirements 4 Basic Pipeline).\nFile Input checkbox sidebar re-selected confirm data validation.\ndata passes integrity checks, RUN button turn yellow become clickable.\nData stored designated subfolder data_path (e.g., data_path/visium).Files correctly named complete (refer data requirements 4 Basic Pipeline).File Input checkbox sidebar re-selected confirm data validation.\ndata passes integrity checks, RUN button turn yellow become clickable.","code":""},{"path":"faq.html","id":"web-page-deployment","chapter":"6 FAQ","heading":"6.3 Web Page Deployment","text":"Issue: Failure deploy local web interface.Resolution: Ensure:\nShiny Server properly installed running.\nFirewall settings allow access specified port (default: 3838).\nShiny Server properly installed running.Firewall settings allow access specified port (default: 3838).","code":""},{"path":"faq.html","id":"issue-reporting","chapter":"6 FAQ","heading":"6.4 Issue Reporting","text":"fully acknowledge current version requires refinement. sincerely apologize inconvenience commit following:Response Mechanism\ntechnical issues encountered, contact us via Github Issue email gyxu_123@163.com. Please include core code snippets error logs facilitate rapid reproduction resolution.Response Mechanism\ntechnical issues encountered, contact us via Github Issue email gyxu_123@163.com. Please include core code snippets error logs facilitate rapid reproduction resolution.Fix Commitment\nvalid feedback receive initial response within 24 hours, critical issues tagged (Label) prioritized tracking. :\n✅ Thoroughly review discuss every reported issue/suggestion, providing comprehensive feedback.\n✅ Prioritize fixes defects impacting core workflows.\n✅ Release periodic updates, urgent patches major defects.\n✅ Publish repair progress version previews update logs.Fix Commitment\nvalid feedback receive initial response within 24 hours, critical issues tagged (Label) prioritized tracking. :\n✅ Thoroughly review discuss every reported issue/suggestion, providing comprehensive feedback.\n✅ Prioritize fixes defects impacting core workflows.\n✅ Release periodic updates, urgent patches major defects.\n✅ Publish repair progress version previews update logs.Collaboration Program\nSpecial thanks developers help improve Molo feedback! Contributors :\nValid Issue submissions\nReproducible anomaly cases\nOptimization suggestions\nlisted project’s Contributors honor wall.\nalso welcome participation beta testing new versions actionable improvement proposals. Every piece feedback drives Molo’s evolution. pledge continuously enhance toolchain stability collaborate community advance spatial omics standardization!Collaboration Program\nSpecial thanks developers help improve Molo feedback! Contributors :Valid Issue submissionsReproducible anomaly casesOptimization suggestions\nlisted project’s Contributors honor wall.also welcome participation beta testing new versions actionable improvement proposals. Every piece feedback drives Molo’s evolution. pledge continuously enhance toolchain stability collaborate community advance spatial omics standardization!","code":""}]
